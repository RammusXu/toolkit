worker_processes            auto;

events {
    worker_connections 1024;
}

http {

    include    mime.types;

    # maximum allowed size of the client request body. By default this is 1m.
    # Request with bigger bodies nginx will return error code 413.
    # http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
    client_max_body_size 10m;

    # https://blog.percy.io/tuning-nginx-behind-google-cloud-platform-http-s-load-balancer-305982ddb340
    keepalive_timeout         650;
    keepalive_requests        10000;

    # GZIP support
    gzip                      on;
    gzip_min_length           128;
    gzip_proxied              any;
    gzip_comp_level           6;

    gzip_types              text/css
                            text/plain
                            text/javascript
                            application/javascript
                            application/json
                            application/x-javascript
                            application/xml
                            application/xml+rss
                            application/xhtml+xml
                            application/x-font-ttf
                            application/x-font-opentype
                            application/vnd.ms-fontobject
                            image/svg+xml
                            image/x-icon
                            application/rss+xml
                            application/atom_xml
                            application/vnd.apple.mpegURL
                            application/x-mpegurl
                            vnd.apple.mpegURL
                            application/dash+xml;

    server {
        # please check the benefits of reuseport https://www.nginx.com/blog/socket-sharding-nginx-release-1-9-1
        # basically instructs to create an individual listening socket for each worker process (using the SO_REUSEPORT
        # socket option), allowing a kernel to distribute incoming connections between worker processes.
        listen 80 default_server reuseport;

        root /app;
        index index.html;

        # Cluster healthchecks
        if ( $http_user_agent ~* (GoogleHC|Go\-http\-client|kube\-proxy) ) {
            return 200;
        }

        # Redirect http to https
        # if ( $http_x_forwarded_proto != 'https' ) {
        #     return 301 https://$host$request_uri;
        # }

        location ~* \.(jpe?g|png|css|js|svg|woff2)$ {
            expires max;
            add_header                      Cache-Control "public";
        }

        location / {
            # React SPA
            try_files $uri $uri/ /index.html;

            expires 10m;
            add_header                      Cache-Control "public";
        }
    }
}
