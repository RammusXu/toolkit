## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry and imagePullSecrets
##
# global:
#   imageRegistry: myRegistryName
#   imagePullSecrets:
#     - myRegistryKeySecretName
#   storageClass: myStorageClass

## Force target Kubernetes version (using Helm capabilites if not set)
##
kubeVersion:

## String to partially override airflow.fullname template (will maintain the release name)
##
nameOverride:
## String to fully override airflow.fullname template
##
fullnameOverride:
## Airflow executor
## ref: http://airflow.apache.org/docs/stable/executor/index.html
## valid values: ['SequentialExecutor', 'LocalExecutor', 'CeleryExecutor', 'KubernetesExecutor']
##
executor: 'CeleryExecutor'
## Name of an existing config map containing the Airflow config file
##
configurationConfigMap:
## Name of an existing config map containing all the DAGs files you want to load in Airflow.
##
dagsConfigMap:
## Whether to load examples dags or not
##
loadExamples: false
## Authentication options
##
auth:
  ## Option to force users to specify a password. That is required for 'helm upgrade' to work properly.
  ## If it is not forced, a random password will be generated.
  ##
  forcePassword: false
  ## Specify username to access web UI
  ##
  username: user
  ## Specify password to access web UI
  ##
  password:
  ## Specify a fernet key to secure airflow connections
  ## Fernet key must be 32 url-safe base64-encoded bytes.
  ## More info at:
  ## - https://airflow.readthedocs.io/en/stable/howto/secure-connections.html
  ## - https://bcb.github.io/airflow/fernet-key
  ##
  fernetKey:
  ## Use existing secret (ignores previous password and fernetKey)
  ##
  existingSecret:

## Web component related properties
##
web:
  ## Bitnami Airflow image version
  ## ref: https://hub.docker.com/r/bitnami/airflow/tags/
  ##
  image:
    registry: docker.io
    repository: bitnami/airflow
    tag: 2.0.2-debian-10-r0
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    pullSecrets: []
    #   - myRegistryKeySecretName
    ## Set to true if you would like to see extra information on logs
    ## It turns BASH and/or NAMI debugging in the image
    ##
    debug: false
  ## Number of web replicas
  ##
  replicaCount: 1

  ## Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []

  ## URL used to access to airflow web ui
  ##
  baseUrl:
  ## Name of an existing config map containing the Airflow webserver config file
  ##
  configMap:
  ## Override cmd
  ##
  command:
  ## Override args
  ##
  args:
  ## Add extra labels to the web's pods
  ##
  podLabels:
  ## Add extra annotations to the web's pods
  ##
  podAnnotations:
  ## Container port to be used.
  ##
  containerPort: 8080
  ## Add extra volume mounts
  ##
  extraVolumeMounts:
  ## Add extra volumes
  ##
  extraVolumes:
  ## Add extra environment variables
  ##
  extraEnvVars:
  ## ConfigMap with extra environment variables
  ##
  extraEnvVarsCM:
  ## Secret with extra environment variables
  ##
  extraEnvVarsSecret:
  ## Web container' resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits: {}
    #    cpu: 200m
    #    memory: 1Gi
    requests: {}
    #    memory: 256Mi
    #    cpu: 250m
  ## Configure extra options for liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 180
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## Custom Liveness probe
  ##
  customLivenessProbe: {}
  ## Custom Liveness probe
  ##
  customReadinessProbe: {}
  ## Enable PodDisruptionBudget for scheduler pods
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
    # maxUnavailable: 1
  ## Add sidecars to the web pods.
  ## Example:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars:
  ## Add initContainers to the web pods.
  ## Example:
  ## initContainers:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  initContainers:
  ## Priority Class Name
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
  ##
  priorityClassName: ''
  ## Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

## Scheculer component related properties
##
scheduler:
  ## Bitnami Airflow Scheduler image version
  ## ref: https://hub.docker.com/r/bitnami/airflow-scheduler/tags/
  ##
  image:
    registry: docker.io
    repository: bitnami/airflow-scheduler
    tag: 2.0.2-debian-10-r7
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    pullSecrets: []
    #   - myRegistryKeySecretName
    ## Set to true if you would like to see extra information on logs
    ## It turns BASH and/or NAMI debugging in the image
    ##
    debug: false
  ## Number of scheduler replicas
  ##
  replicaCount: 1
  ## Override cmd
  ##
  command:
  ## Override args
  ##
  args:
  ## Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## Add extra labels to the web's pods
  ##
  podLabels:
  ## Add extra annotations to the web's pods
  ##
  podAnnotations:
  ## Add extra volume mounts
  ##
  extraVolumeMounts:
  ## Add extra volumes
  ##
  extraVolumes:
  ## Add extra environment variables
  ##
  extraEnvVars:
  ## ConfigMap with extra environment variables
  ##
  extraEnvVarsCM:
  ## Secret with extra environment variables
  ##
  extraEnvVarsSecret:
  ## Scheduler containers' resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits: {}
    #    cpu: 200m
    #    memory: 1Gi
    requests: {}
    #    memory: 256Mi
    #    cpu: 250m
  ## Custom Liveness probe
  ##
  customLivenessProbe: {}
  ## Custom Liveness probe
  ##
  customReadinessProbe: {}
  ## Enable PodDisruptionBudget for scheduler pods
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
    # maxUnavailable: 1
  ## Add sidecars to the scheduler pods.
  ## Example:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars:
  ## Add initContainers to the scheduler pods.
  ## Example:
  ## initContainers:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  initContainers:
  ## Priority Class Name
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
  ##
  priorityClassName: ''
  ## Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

## Worker component related properties
##
worker:
  ## Bitnami Airflow Worker image version
  ## ref: https://hub.docker.com/r/bitnami/airflow-worker/tags/
  ##
  image:
    registry: docker.io
    repository: bitnami/airflow-worker
    tag: 2.0.2-debian-10-r7
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    pullSecrets: []
    #   - myRegistryKeySecretName
    ## Set to true if you would like to see extra information on logs
    ## It turns BASH and/or NAMI debugging in the image
    ##
    debug: false
  ## Port where the worker will be exposed
  ##
  port: 8793
  ## Number of worker replicas
  ##
  replicaCount: 1
  ## Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## Template to replace the default one to be use when `executor=KubernetesExecutor` to create worker pods
  ##
  podTemplate:
  ## podManagementPolicy to manage scaling operation of worker pods
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
  ##
  podManagementPolicy:
  ## Override cmd
  ##
  command:
  ## Override args
  ##
  args:
  ## Add annotations to the worker pods
  ##
  podAnnotations: {}
  ## Add extra labels to the web's pods
  ##
  podLabels:
  ## Add extra volume mounts
  ##
  extraVolumeMounts:
  ## Add extra volumes
  ##
  extraVolumes:
  ## Add extra environment variables
  ##
  extraEnvVars:
  ## ConfigMap with extra environment variables
  ##
  extraEnvVarsCM:
  ## Secret with extra environment variables
  ##
  extraEnvVarsSecret:
  ## Worker containers' resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits: {}
    #    cpu: 200m
    #    memory: 1Gi
    requests: {}
    #    memory: 256Mi
    #    cpu: 250m
  ## Configure extra options for liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 180
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## Custom Liveness probe
  ##
  customLivenessProbe: {}
  ## Custom Liveness probe
  ##
  customReadinessProbe: {}
  ## Enable PodDisruptionBudget for worker pods
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
    # maxUnavailable: 1
  ## Enable HorizontalPodAutoscaler for worker pods
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ##
  autoscaling:
    ## Whether enabled horizontal pod autoscale
    ##
    enabled: false
    ## Configure a minimum/maximum amount of pods
    ##
    replicas:
      min: 1
      max: 3
    ## Define the target to trigger the scaling actions (utilization percentage)
    ##
    targets:
      cpu: 80
      memory: 80
  ## StatefulSet controller supports automated updates. There are two valid update strategies: RollingUpdate and OnDelete
  ## ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets
  ##
  updateStrategy: RollingUpdate
  ## Partition update strategy
  ## https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#partitions
  ##
  rollingUpdatePartition:
  ## Add sidecars to the worker pods.
  ## Example:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars:
  ## Add initContainers to the worker pods.
  ## Example:
  ## initContainers:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  initContainers:
  ## Priority Class Name
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
  ##
  priorityClassName: ''
  ## Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## Affinity for worker pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: this configuration supersedes the global affinity configuration
  ##
  affinity: {}
  ## Tolerations for worker pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ## Note: this configuration supersedes the global tolerations configuration
  ##
  tolerations: []

## Add labels to all the deployed resources
##
commonLabels: {}
## Add annotations to all the deployed resources
##
commonAnnotations: {}
## Common parameters to all Airflow containers: the parameters from the configuration file can be overwritten by using environment variables with this format:
## AIRFLOW__{SECTION}__{KEY}. Note the double underscores. More info at https://airflow.readthedocs.io/en/stable/howto/set-config.html
##
## - name: AIRFLOW__SMTP__SMTP_HOST
##   value: "localhost"
## - name: AIRFLOW__SMTP__SMTP_PORT
##   value: "25"
## - name: AIRFLOW__SMTP__USER
##   value: ""
##
extraEnvVars: []
## ConfigMap with common settings for all Airflow containers
##
extraEnvVarsCM:
## Secret with common settings for all Airflow containers
##
extraEnvVarsSecret:
## Add sidecars to all the pods.
## Example:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars:
## Add initContainers to all the pods.
## Example:
## initContainers:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
initContainers:

## Configure git to pull dags and plugins
##
git:
  ## Bitnami git image version
  ## ref: https://hub.docker.com/r/bitnami/git/tags/
  ##
  image:
    registry: docker.io
    repository: bitnami/git
    tag: 2.31.1-debian-10-r30
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    pullSecrets: []
    #   - myRegistryKeySecretName
  ## Name for repositories can be anything unique and must follow same naming conventions as kubernetes.
  ## Kubernetes resources can have names up to 253 characters long. The characters allowed in names are:
  ## digits (0-9), lower case letters (a-z), -, and .
  ##
  ##   - repository: https://github.com/myuser/myrepo
  ##     branch: main
  ##     name: my-dags
  ##     path: /
  ##
  dags:
    ## Enable in order to download DAG files from git repositories.
    ##
    enabled: false
    repositories:
      - repository:
        branch:
        name:
        path:
  plugins:
    ## Enable in order to download Plugins files from git repositories.
    ##
    enabled: false
    repositories:
      - repository:
        branch:
        name:
        path:
  ## Properties for the clone init container
  ##
  clone:
    ## Override cmd
    ##
    command:
    ## Override args
    ##
    args:
    ## Add extra volume mounts
    ##
    extraVolumeMounts:
    ## Add extra environment variables
    ##
    extraEnvVars:
    ## ConfigMap with extra environment variables
    ##
    extraEnvVarsCM:
    ## Secret with extra environment variables
    ##
    extraEnvVarsSecret:
    ## Clone init container resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources: {}
  sync:
    ## Interval in seconds to pull the git repository containing the plugins and/or DAG files
    ##
    interval: 60
    ## Override cmd
    ##
    command:
    ## Override args
    ##
    args:
    ## Add extra volume mounts
    ##
    extraVolumeMounts:
    ## Add extra environment variables
    ##
    extraEnvVars:
    ## ConfigMap with extra environment variables
    ##
    extraEnvVarsCM:
    ## Secret with extra environment variables
    ##
    extraEnvVarsSecret:
    ## Sync sidecar container resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources: {}

## LDAP configuration
##
ldap:
  ## Enable LDAP authentication
  ##
  enabled: false
  ## Server URI, eg. ldap://ldap_server:389
  ##
  uri: 'ldap://ldap_server:389'
  ## Base of the search, eg. ou=example,o=org
  ##
  base: 'ou=example,o=org'
  ## Bind DN
  ##
  binddn: 'cn=user,ou=example,o=org'
  ## Bind Password
  ##
  bindpw: ''
  ## Field used for uid
  ##
  uidField: 'uid'
  ## SSL/TLS parameters for LDAP
  ##
  tls:
    ## Enabled TLS/SSL for LDAP, you must include the CA file.
    ##
    enabled: false
    ## Allow to use self signed certificates
    ##
    allowSelfSigned: true
    ## Name of the existing secret containing the certificate CA file that will be used by ldap client.
    ## Cloud be create with: kubectl create secret generic airflow-secret --from-file=./ca.pem
    ##
    CAcertificateSecret: ''
    ## LDAP CA cert filename
    ## eg. ca.pem
    ##
    CAcertificateFilename: ''

## Role Based Access
## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
##
rbac:
  ## Specifies whether RBAC rules should be created
  ##
  create: false

## Pods Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  ## Specifies whether a ServiceAccount should be created
  ##
  create: false
  ## The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the airflow.fullname template
  # name:

  ## Annotations for service account. Evaluated as a template.
  ## Only used if `create` is `true`.
  ##
  annotations: {}

## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
##
podSecurityContext:
  enabled: true
  fsGroup: 1001
## Configure Container Security Context (only main container)
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
##
containerSecurityContext:
  enabled: true
  runAsUser: 1001

## Network policies
## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
##
networkPolicies:
  ## Specifies whether a NetworkPolicy should be created
  ##
  enabled: false

## Kubernetes configuration
## For minikube, set this to NodePort, elsewhere use LoadBalancer
##
service:
  type: ClusterIP
  port: 8080

  ## Specify the NodePort value for the LoadBalancer and NodePort service types.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  nodePort:

  ## Use loadBalancerIP to request a specific static IP,
  # loadBalancerIP:

  ## Service annotations done as key:value pairs
  ##
  annotations:

## Configure the ingress resource that allows you to access the
## Airflow installation. Set up the URL
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## Set to true to enable ingress record generation
  ##
  enabled: false

  ## Override API Version (automatically detected if not set)
  ##
  apiVersion:

  ## Ingress Path type
  ##
  pathType: ImplementationSpecific

  ## Set this to true in order to add the corresponding annotations for cert-manager
  ##
  certManager: false

  ## Ingress annotations done as key:value pairs
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ##
  ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
  ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
  ##
  annotations:
  #  kubernetes.io/ingress.class: nginx

  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  ##
  hosts:
    - name: airflow.local
      path: /
      ## Set this to true in order to enable TLS on the ingress record
      ##
      tls: false

      ## Optionally specify the TLS hosts for the ingress record
      ## Useful when the Ingress controller supports www-redirection
      ## If not specified, the above host name will be used
      ##
      tlsHosts: []
      # - www.airflow.local
      # - airflow.local

      ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
      ##
      tlsSecret: airflow.local-tls

  secrets:
  ## If you're providing your own certificates, please use this to add the certificates as secrets
  ## key and certificate should start with -----BEGIN CERTIFICATE----- or
  ## -----BEGIN RSA PRIVATE KEY-----
  ##
  ## name should line up with a tlsSecret set further up
  ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
  ##
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  # - name: airflow.local-tls
  #   key:
  #   certificate:

## Pod affinity preset
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
## Allowed values: soft, hard
##
podAffinityPreset: ''

## Pod anti-affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
## Allowed values: soft, hard
##
podAntiAffinityPreset: soft

## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
## Allowed values: soft, hard
##
nodeAffinityPreset:
  ## Node affinity type
  ## Allowed values: soft, hard
  ##
  type: ''
  ## Node label key to match
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ''
  ## Node label values to match
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
##
affinity: {}

## Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

##
## PostgreSQL chart configuration
##
## https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
##
postgresql:
  enabled: true
  postgresqlUsername: bn_airflow
  # postgresqlPassword:
  postgresqlDatabase: bitnami_airflow
  ## In case of postgresql.enabled = true, allow the usage of existing secrets for postgresql
  ##
  existingSecret:

externalDatabase:
  ## All of these values are only used when postgresql.enabled is set to false
  ## Database host
  ##
  host: localhost
  ## non-root Username for Airflow Database
  ##
  user: bn_airflow
  ## Database password
  ##
  password:
  ## Name of an existing secret resource containing the DB password
  ##
  existingSecret:
  ## Name of an existing secret key containing the DB password
  ##
  existingSecretPasswordKey:
  ## Database name
  ##
  database: bitnami_airflow
  ## Database port number
  ##
  port: 5432

##
## Redis(TM) chart configuration
##
## https://github.com/bitnami/charts/blob/master/bitnami/redis/values.yaml
##
redis:
  enabled: true
  ## Use password authentication
  ##
  auth:
    enabled: true
    ## Redis(TM) password (both master and slave)
    ## Defaults to a random 10-character alphanumeric string if not set and auth.enabled is true.
    ## It should always be set using the password value or in the existingSecret to avoid issues
    ## with Airflow.
    ## The password value is ignored if existingSecret is set
    # password:
    ##
    ## Name of existing secret object containing the password
    ##
    existingSecret:

  ##
  ## Cluster settings
  ##
  architecture: standalone

externalRedis:
  ## All of these values are only used when redis.enabled is set to false
  ## Redis(TM) host
  ##
  host: localhost
  ## Redis(TM) port number
  ##
  port: 6379
  ## Redis(TM) password
  ##
  password:
  ## Name of an existing secret resource containing the Redis(TM) password in a 'redis-password' key
  ##
  existingSecret:
  ## Redis(TM) username
  ## Most Redis(TM) implementnations do not require a username to authenticate
  ## and it should be enough with the password
  ##
  username:

## Prometheus Exporter / Metrics
##
metrics:
  enabled: false

  image:
    registry: docker.io
    repository: bitnami/airflow-exporter
    tag: 0.20210126.0-debian-10-r87
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    pullSecrets: []
    #   - myRegistryKeySecretName

  ## Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []

  ## Metrics exporter resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}

  ## Metrics exporter labels and tolerations for pod assignment
  # nodeSelector: {"beta.kubernetes.io/arch": "amd64"}
  tolerations: []

  ## Metrics exporter pod Annotation and Labels
  ##
  podLabels: {}

  podAnnotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9112'

  ## Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

## Array with extra yaml to deploy with the chart. Evaluated as a template
##
extraDeploy: []

